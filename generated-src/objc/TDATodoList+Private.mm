// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from todolist.djinni

#import "TDATodoList+Private.h"
#import "TDATodoList.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "TDATodo+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface TDATodoList ()

- (id)initWithCpp:(const std::shared_ptr<::todolist::TodoList>&)cppRef;

@end

@implementation TDATodoList {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::todolist::TodoList>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::todolist::TodoList>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable TDATodoList *)createWithPath:(nonnull NSString *)path {
    try {
        auto objcpp_result_ = ::todolist::TodoList::create_with_path(::djinni::String::toCpp(path));
        return ::djinni_generated::TodoList::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSArray<TDATodo *> *)getTodos {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->get_todos();
        return ::djinni::List<::djinni_generated::Todo>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int32_t)addTodo:(nonnull NSString *)label {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->add_todo(::djinni::String::toCpp(label));
        return ::djinni::I32::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)updateTodoCompleted:(int32_t)id
                  completed:(int32_t)completed {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->update_todo_completed(::djinni::I32::toCpp(id),
                                                                         ::djinni::I32::toCpp(completed));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)deleteTodo:(int32_t)id {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->delete_todo(::djinni::I32::toCpp(id));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto TodoList::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto TodoList::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<TDATodoList>(cpp);
}

}  // namespace djinni_generated

@end
